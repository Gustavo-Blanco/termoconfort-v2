// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//models
model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  name           String? @db.VarChar(255)
  password       String? @db.VarChar(255)
  hashedPassword String? @db.VarChar(255)
  googleId       String? @db.VarChar(255)

  phoneNumber  String?      @db.VarChar(9)
  profileImage String?      @db.VarChar(255)
  profileKey   String?      @db.VarChar(255)
  role         Role?        @default(CLIENT)
  enterprises  Enterprise[]
  posts        Post[]
  comments     Comment[]
  orders       Order[]
  isActive     Boolean?     @default(true) @db.Bit(1)
  token        String?      @db.Text
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
}

model Enterprise {
  id          Int      @id @default(autoincrement())
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?
  ruc         String?  @db.VarChar(255)
  name        String?  @db.VarChar(255)
  description String?  @db.Text
  imageUrl    String?  @db.VarChar(255)
  imageKey    String?  @db.VarChar(255)
  isActive    Boolean? @default(true) @db.Bit(1)

  email     String? @db.VarChar(255)
  linkedin  String? @db.VarChar(255)
  facebook  String? @db.VarChar(255)
  twitter   String? @db.VarChar(255)
  youtube   String? @db.VarChar(255)
  instagram String? @db.VarChar(255)
  webPage   String? @db.VarChar(255)

  workers   Int?
  state     Int?      @default(0)
  score     Int?      @default(0)
  counter   Int?      @default(0)
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

enum Role {
  CLIENT
  ADMIN
  ENTERPRISE
}

model Product {
  id            Int         @id @default(autoincrement())
  enterpriseId  Int?
  enterprise    Enterprise? @relation(fields: [enterpriseId], references: [id])
  name          String?     @db.VarChar(255)
  description   String?     @db.Text
  brand         String?     @db.VarChar(255)
  capacity      Int?        @db.Int
  model         String?     @db.VarChar(255)
  type          String?     @db.VarChar(255)
  energyConsume Int?        @db.Int
  install       Boolean?    @default(true) @db.Bit(1)
  warranty      Boolean?    @default(true) @db.Bit(1)
  stock         Int?        @db.Int
  price         Decimal?    @db.Decimal(8, 2)
  isActive      Boolean?    @default(true) @db.Bit(1)
  images        Image[]
  orders        Order[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
}

model Image {
  id        Int      @id @default(autoincrement())
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])
  key       String?  @db.VarChar(255)
  url       String?  @db.VarChar(255)
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String?   @db.VarChar(255)
  content   String?   @db.Text
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  comments  Comment[]
  isActive  Boolean?  @default(true) @db.Bit(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String?  @db.Text
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
  isActive  Boolean? @default(true) @db.Bit(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Order {
  id        Int      @id @default(autoincrement())
  userId    Int?
  productId Int?
  user      User?    @relation(fields: [userId], references: [id])
  product   Product? @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
